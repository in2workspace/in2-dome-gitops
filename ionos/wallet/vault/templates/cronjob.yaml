apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-check-cronjob
  labels:
    app: {{ .Release.Name }}
spec:
  schedule: "*/5 * * * *"  # Run every 5 minutes
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: vault-check-sa
          containers:
            - name: vault-check
              image: bitnami/kubectl:latest
              command: ["/bin/sh", "-c"]
              args:
                - |
                  #!/bin/sh

                  NAMESPACE="in2"
                  VAULT_SERVICE_NAME="wallet-vault-server"
                  VAULT_ADDR="http://$VAULT_SERVICE_NAME.$NAMESPACE.svc.cluster.local:8200"
                  VAULT_POD_NAME=$(kubectl get pods -n $NAMESPACE -l app.kubernetes.io/instance=vault -o jsonpath='{.items[0].metadata.name}')
                  LAST_LOG_LINE=$(kubectl logs $VAULT_POD_NAME -n $NAMESPACE | tail -n 1)
                  GREP_RESULT=$(echo "$LAST_LOG_LINE" | grep 'core: seal configuration missing, not initialized')
                  echo "Grep result: $GREP_RESULT"

                  if [ -n "$GREP_RESULT" ]; then
                    echo "Condition met: Vault is not initialized. Proceeding to initialize and unseal Vault..."

                    # Initialize Vault inside the Vault pod
                    kubectl exec -n $NAMESPACE $VAULT_POD_NAME -- /bin/sh -c 'vault operator init -format=json > /tmp/vault_init.json'

                    # Extract the unseal keys and root token inside the Vault pod
                    unseal_keys=$(kubectl exec -n $NAMESPACE $VAULT_POD_NAME -- /bin/sh -c 'cat /tmp/vault_init.json | jq -r ".unseal_keys_b64[]"')
                    root_token=$(kubectl exec -n $NAMESPACE $VAULT_POD_NAME -- /bin/sh -c 'cat /tmp/vault_init.json | jq -r ".root_token"')

                    # Decode the unseal keys
                    unseal_key_1=$(echo $unseal_keys | cut -d' ' -f1 | base64 --decode)
                    unseal_key_2=$(echo $unseal_keys | cut -d' ' -f2 | base64 --decode)
                    unseal_key_3=$(echo $unseal_keys | cut -d' ' -f3 | base64 --decode)

                    # Unseal Vault using the decoded unseal keys inside the Vault pod
                    kubectl exec -n $NAMESPACE $VAULT_POD_NAME -- /bin/sh -c "vault operator unseal $unseal_key_1"
                    kubectl exec -n $NAMESPACE $VAULT_POD_NAME -- /bin/sh -c "vault operator unseal $unseal_key_2"
                    kubectl exec -n $NAMESPACE $VAULT_POD_NAME -- /bin/sh -c "vault operator unseal $unseal_key_3"

                    # Export Vault root token
                    export VAULT_TOKEN=$root_token

                  else
                    echo "Vault is already initialized or the log message was not found."
                    echo "$LAST_LOG_LINE"
                    echo "$GREP_RESULT"
                  fi
          restartPolicy: OnFailure
