wallet:

  ## configuration for the wallet-api
  wallet-api:
    # -- should be enabled?
    enabled: true
    # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
    fullnameOverride: wallet-api
    image:
      repository: in2workspace/in2-wallet-api
      # Overrides the image tag whose default is the chart appVersion.
      tag: v1.4.0
      pullPolicy: Always
    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-in2-test-issuer
      hosts:
        - host: wallet-dev.dome.ssihub.org
          paths:
            - path: /wallet-api
              pathType: Prefix
      tls:
        - hosts:
            - wallet-dev.dome.ssihub.org
          secretName: wallet-tls-secret
    ## deployment specific configuration
    app:
      profile: lcl
      internalServerPort: 8080
      logLevel: INFO
      basePath: /wallet-api
      authServer:
        external:
          scheme: https
          domain: keycloak-dev.ssihub.org
          port: 443
          path: /realms/dome-wallet
        internal:
          scheme: http
          domain: keycloak-proxy
          port: 80
          path: /realms/dome-wallet
        jwtDecoderPath: /protocol/openid-connect/certs
      ebsiTest:
        url: http://keycloak-proxy:80/realms/dome-wallet/protocol/openid-connect/token
        client:
          id: user-registry-client
          existingSecret:
            # -- should an existing secret be used
            enabled: true
            # -- name of the secret
            name: wallet-secret
            # -- key to retrieve the password from
            key: client-secret
        userData:
          name: admin
          existingSecret:
            # -- should an existing secret be used
            enabled: true
#            # -- name of the secret
            name: wallet-secret
#            # -- key to retrieve the password from
            key: user-password
      vault:
        provider: hashicorp
        # host needs to match with the service name of the vault server
        host: vault-server # fullnameOverride: wallet-vault
        scheme: http
        port: 8200
        existingSecret:
          # -- should an existing secret be used
          enabled: true
#          # -- name of the secret
          name: vault-unseal-secret
#          # -- key to retrieve the token from
          key: root
    db:
      externalService: false
      schema: wallet
      host: wallet-postgres
      port: 5432
      name: wallet
      username: postgres
      password: postgres
      existingSecret:
        enabled: true
        name: wallet-secret
        key: db-password

  ## configuration for the dome-wallet-ui
  dome-wallet-ui:
    image:
      repository: in2workspace/in2-wallet-ui
      pullPolicy: Always
      # Overrides the image tag whose default is the chart appVersion.
      tag: v1.6.3
    # -- should be enabled?
    enabled: true
    # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
    fullnameOverride: dome-wallet-ui
    ## ingress specific configuration
    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-in2-test-issuer
#        nginx.ingress.kubernetes.io/proxy-read-timeout: "3600s"
#        nginx.ingress.kubernetes.io/proxy-send-timeout: "3600s"
      hosts:
        - host: wallet-dev.dome.ssihub.org
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - wallet-dev.dome.ssihub.org
          secretName: wallet-tls-secret
    ## deployment specific configuration
    app:
      internalServerPort: 8080
      logsEnabled: true
      colors:
        primary: "#00ADD3"
        primaryContrast: "#ffffff"
        secondary: "#50c8ff"
        secondaryContrast: "#000000"
      logoSrc: "assets/logos/dome_white_logo.png"
      walletApi:
        # Este internalDomain es en realidad el external
        internalDomain: https://wallet-dev.dome.ssihub.org/wallet-api
        # ws = sin certificado, wss = con certificado
        websocketExternalDomain: wss://wallet-dev.dome.ssihub.org/wallet-api
#        websocketPath: /api/v1/pin
#        executeContentPath: /api/v1/execute-content
#        requestCredentialPath: /api/v1/request-credential
#        verifiablePresentationPath: /api/v1/vp
#        credentialsPath: /api/v1/credentials
#        credentialsByIdPath: /api/v1/credentials?credentialId=
#        requestSignedCredentialPath: /api/v1/request-signed-credential
#        cborPath: /api/v1/vp/cbor
      
      iam:
        external_domain: https://keycloak-dev.ssihub.org
        realm_path: /realms/dome-wallet

  ## configuration for the dome-wallet-keycloak
  dome-wallet-keycloak:
    enabled: false

  ## configuration of postgres to be used for the blockchain-connector - see https://github.com/bitnami/charts/tree/main/bitnami/postgresql for details
  postgresql:
    # -- should the postgresql deployment be enabled
    enabled: false

  ## configuration of postgres
  wallet-postgresql:
    # -- should the postgresql deployment be enabled
    enabled: true
    auth:
      # -- username to be used
      username: postgres
      # -- should the default postgres user be enabled
      enablePostgresUser: true
      # -- password to be used
      existingSecret: wallet-secret
      secretKeys:
        adminPasswordKey: db-password
        userPasswordKey: db-password

  wallet-external-database:
    # -- should the postgresql deployment be enabled
    enabled: false
