global:
  domain: "wallet-dev.dome.ssihub.org"
  ingress:
    enabled: true
    className: "nginx"
    labels: {}
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    enableTLS: true
    clusterIssuer: "letsencrypt-in2-test-issuer"
    secondary:
      enabled: true
      domain: "wallet.dome-marketplace-lcl.org"

dome-wallet:

  ## configuration for the wallet-backend
  dome-wallet-backend:
    fullNameOverride: "dome-wallet-backend"
    image:
      # Overrides the image tag whose default is the chart appVersion.
      tag: v1.4.4
      pullPolicy: Always
    ## deployment specific configuration
    app:
      logLevel: DEBUG
      authServer:
        externalUrl: https://wallet-dev.dome.ssihub.org/keycloak/realms/wallet
        internalUrl: http://dome-wallet-keycloak:80/realms/wallet
      cors:
        allowedOrigins: "https://wallet-dev.dome.ssihub.org"
      vault:
        provider: hashicorp
        # host needs to match with the service name of the vault server
        url: http://vault-server:8200
        existingSecret:
          # -- should an existing secret be used
          enabled: true
          #          # -- name of the secret
          name: vault-unseal-secret
          #          # -- key to retrieve the token from
          key: root
      ebsiTest:
        url: http://dome-wallet-keycloak:80/realms/wallet/protocol/openid-connect/token
        client:
          id: user-registry-client
          existingSecret:
            # -- should an existing secret be used
            enabled: true
            # -- name of the secret
            name: wallet-secret
            # -- key to retrieve the password from
            key: client-secret
        userData:
          name: admin
          existingSecret:
            # -- should an existing secret be used
            enabled: true
            #            # -- name of the secret
            name: wallet-secret
            #            # -- key to retrieve the password from
            key: user-password
      db:
        schema: wallet
        host: wallet-postgres
        port: 5432
        name: wallet
        username: postgres
        password: postgres
        existingSecret:
          enabled: true
          name: wallet-secret
          key: db-password

  ## configuration for the dome-wallet-ui
  dome-wallet-frontend:
    fullNameOverride: "dome-wallet-frontend"
    image:
      pullPolicy: Always
      # Overrides the image tag whose default is the chart appVersion.
      tag: v1.9.2-snapshot
    ## deployment specific configuration
    app:
      logsEnabled: true
      colors:
        primary: "#00ADD3"
        primaryContrast: "#ffffff"
        secondary: "#50c8ff"
        secondaryContrast: "#000000"
      logoSrc: "assets/logos/dome-logo.png"
      faviconSrc: "assets/icons/dome-favicon.png"
      walletApi:
        # Este internalDomain es en realidad el external
        internalUrl: https://wallet-dev.dome.ssihub.org/api
        # ws = sin certificado, wss = con certificado
        websocketExternalUrl: wss://wallet-dev.dome.ssihub.org/api
      iam:
        externalUrl: https://wallet-dev.dome.ssihub.org/keycloak/realms/wallet

  ## configuration for the dome-wallet-keycloak
  dome-wallet-keycloak:
    # -- should be enabled?
    enabled: false

  ## configuration of postgres to be used for the blockchain-connector - see https://github.com/bitnami/charts/tree/main/bitnami/postgresql for details
  dome-wallet-keycloak-postgresql:
    # -- should the postgresql deployment be enabled
    enabled: false

  ## configuration of postgres
  dome-wallet-postgresql:
    # -- should the postgresql deployment be enabled
    enabled: true
    # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
    # ! Changing this parameter may cause the PVC to be re-created and the data lost
    fullnameOverride: wallet-postgres
    # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
    # ! Changing this parameter may cause the PVC to be re-created and the data lost
    nameOverride: wallet-postgres
    auth:
      # -- username to be used
      username: postgres
      # -- should the default postgres user be enabled
      enablePostgresUser: true
      # -- password to be used
      existingSecret: wallet-secret
      secretKeys:
        adminPasswordKey: db-password
        userPasswordKey: db-password